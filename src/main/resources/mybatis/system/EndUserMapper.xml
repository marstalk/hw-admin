<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.classm.system.dao.EndUserDao">

	<select id="get" resultType="com.classm.system.domain.EndUserDO">
		select `id`,`type`,`phone`,`email`,`gender`,`first_name`,`last_name`,`birth`,`notify`,`pwd` from t_end_user where id = #{value}
	</select>

	<select id="list" resultType="com.classm.system.domain.EndUserDO">
		select `id`,`type`,`phone`,`email`,`gender`,`first_name`,`last_name`,`birth`,`notify`,`pwd` from t_end_user
        <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="phone != null and phone != ''"> and phone = #{phone} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		  <if test="gender != null and gender != ''"> and gender = #{gender} </if>
		  		  <if test="firstName != null and firstName != ''"> and first_name = #{firstName} </if>
		  		  <if test="lastName != null and lastName != ''"> and last_name = #{lastName} </if>
		  		  <if test="birth != null and birth != ''"> and birth = #{birth} </if>
		  		  <if test="notify != null and notify != ''"> and notify = #{notify} </if>
		  		  <if test="pwd != null and pwd != ''"> and pwd = #{pwd} </if>
		  		</where>
        <choose>
            <when test="sort != null and sort.trim() != ''">
                order by ${sort} ${order}
            </when>
			<otherwise>
                order by id desc
			</otherwise>
        </choose>
		<if test="offset != null and limit != null">
			limit #{offset}, #{limit}
		</if>
	</select>
	
 	<select id="count" resultType="int">
		select count(*) from t_end_user
		 <where>  
		  		  <if test="id != null and id != ''"> and id = #{id} </if>
		  		  <if test="type != null and type != ''"> and type = #{type} </if>
		  		  <if test="phone != null and phone != ''"> and phone = #{phone} </if>
		  		  <if test="email != null and email != ''"> and email = #{email} </if>
		  		  <if test="gender != null and gender != ''"> and gender = #{gender} </if>
		  		  <if test="firstName != null and firstName != ''"> and first_name = #{firstName} </if>
		  		  <if test="lastName != null and lastName != ''"> and last_name = #{lastName} </if>
		  		  <if test="birth != null and birth != ''"> and birth = #{birth} </if>
		  		  <if test="notify != null and notify != ''"> and notify = #{notify} </if>
		  		  <if test="pwd != null and pwd != ''"> and pwd = #{pwd} </if>
		  		</where>
	</select>
	 
	<insert id="save" parameterType="com.classm.system.domain.EndUserDO" useGeneratedKeys="true" keyProperty="id">
		insert into t_end_user
		(
			`type`, 
			`phone`, 
			`email`, 
			`gender`, 
			`first_name`, 
			`last_name`, 
			`birth`, 
			`notify`, 
			`pwd`
		)
		values
		(
			#{type}, 
			#{phone}, 
			#{email}, 
			#{gender}, 
			#{firstName}, 
			#{lastName}, 
			#{birth}, 
			#{notify}, 
			#{pwd}
		)
	</insert>
	 
	<update id="update" parameterType="com.classm.system.domain.EndUserDO">
		update t_end_user 
		<set>
			<if test="type != null">`type` = #{type}, </if>
			<if test="phone != null">`phone` = #{phone}, </if>
			<if test="email != null">`email` = #{email}, </if>
			<if test="gender != null">`gender` = #{gender}, </if>
			<if test="firstName != null">`first_name` = #{firstName}, </if>
			<if test="lastName != null">`last_name` = #{lastName}, </if>
			<if test="birth != null">`birth` = #{birth}, </if>
			<if test="notify != null">`notify` = #{notify}, </if>
			<if test="pwd != null">`pwd` = #{pwd}</if>
		</set>
		where id = #{id}
	</update>
	
	<delete id="remove">
		delete from t_end_user where id = #{value}
	</delete>
	
	<delete id="batchRemove">
		delete from t_end_user where id in 
		<foreach item="id" collection="array" open="(" separator="," close=")">
			#{id}
		</foreach>
	</delete>

</mapper>